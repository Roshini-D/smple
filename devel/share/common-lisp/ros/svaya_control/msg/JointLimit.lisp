; Auto-generated. Do not edit!


(cl:in-package svaya_control-msg)


;//! \htmlinclude JointLimit.msg.html

(cl:defclass <JointLimit> (roslisp-msg-protocol:ros-message)
  ((joint_cnt
    :reader joint_cnt
    :initarg :joint_cnt
    :type cl:fixnum
    :initform 0)
   (joint_max_pos_limit_normal_mode
    :reader joint_max_pos_limit_normal_mode
    :initarg :joint_max_pos_limit_normal_mode
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (joint_min_pos_limit_normal_mode
    :reader joint_min_pos_limit_normal_mode
    :initarg :joint_min_pos_limit_normal_mode
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (joint_max_pos_limit_reduced_mode
    :reader joint_max_pos_limit_reduced_mode
    :initarg :joint_max_pos_limit_reduced_mode
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (joint_min_pos_limit_reduced_mode
    :reader joint_min_pos_limit_reduced_mode
    :initarg :joint_min_pos_limit_reduced_mode
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (joint_vel_limit_reduced_mode
    :reader joint_vel_limit_reduced_mode
    :initarg :joint_vel_limit_reduced_mode
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (joint_vel_limit_normal_mode
    :reader joint_vel_limit_normal_mode
    :initarg :joint_vel_limit_normal_mode
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0)))
)

(cl:defclass JointLimit (<JointLimit>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <JointLimit>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'JointLimit)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name svaya_control-msg:<JointLimit> is deprecated: use svaya_control-msg:JointLimit instead.")))

(cl:ensure-generic-function 'joint_cnt-val :lambda-list '(m))
(cl:defmethod joint_cnt-val ((m <JointLimit>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader svaya_control-msg:joint_cnt-val is deprecated.  Use svaya_control-msg:joint_cnt instead.")
  (joint_cnt m))

(cl:ensure-generic-function 'joint_max_pos_limit_normal_mode-val :lambda-list '(m))
(cl:defmethod joint_max_pos_limit_normal_mode-val ((m <JointLimit>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader svaya_control-msg:joint_max_pos_limit_normal_mode-val is deprecated.  Use svaya_control-msg:joint_max_pos_limit_normal_mode instead.")
  (joint_max_pos_limit_normal_mode m))

(cl:ensure-generic-function 'joint_min_pos_limit_normal_mode-val :lambda-list '(m))
(cl:defmethod joint_min_pos_limit_normal_mode-val ((m <JointLimit>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader svaya_control-msg:joint_min_pos_limit_normal_mode-val is deprecated.  Use svaya_control-msg:joint_min_pos_limit_normal_mode instead.")
  (joint_min_pos_limit_normal_mode m))

(cl:ensure-generic-function 'joint_max_pos_limit_reduced_mode-val :lambda-list '(m))
(cl:defmethod joint_max_pos_limit_reduced_mode-val ((m <JointLimit>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader svaya_control-msg:joint_max_pos_limit_reduced_mode-val is deprecated.  Use svaya_control-msg:joint_max_pos_limit_reduced_mode instead.")
  (joint_max_pos_limit_reduced_mode m))

(cl:ensure-generic-function 'joint_min_pos_limit_reduced_mode-val :lambda-list '(m))
(cl:defmethod joint_min_pos_limit_reduced_mode-val ((m <JointLimit>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader svaya_control-msg:joint_min_pos_limit_reduced_mode-val is deprecated.  Use svaya_control-msg:joint_min_pos_limit_reduced_mode instead.")
  (joint_min_pos_limit_reduced_mode m))

(cl:ensure-generic-function 'joint_vel_limit_reduced_mode-val :lambda-list '(m))
(cl:defmethod joint_vel_limit_reduced_mode-val ((m <JointLimit>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader svaya_control-msg:joint_vel_limit_reduced_mode-val is deprecated.  Use svaya_control-msg:joint_vel_limit_reduced_mode instead.")
  (joint_vel_limit_reduced_mode m))

(cl:ensure-generic-function 'joint_vel_limit_normal_mode-val :lambda-list '(m))
(cl:defmethod joint_vel_limit_normal_mode-val ((m <JointLimit>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader svaya_control-msg:joint_vel_limit_normal_mode-val is deprecated.  Use svaya_control-msg:joint_vel_limit_normal_mode instead.")
  (joint_vel_limit_normal_mode m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <JointLimit>) ostream)
  "Serializes a message object of type '<JointLimit>"
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'joint_cnt)) ostream)
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'joint_max_pos_limit_normal_mode))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'joint_max_pos_limit_normal_mode))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'joint_min_pos_limit_normal_mode))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'joint_min_pos_limit_normal_mode))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'joint_max_pos_limit_reduced_mode))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'joint_max_pos_limit_reduced_mode))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'joint_min_pos_limit_reduced_mode))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'joint_min_pos_limit_reduced_mode))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'joint_vel_limit_reduced_mode))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'joint_vel_limit_reduced_mode))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'joint_vel_limit_normal_mode))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'joint_vel_limit_normal_mode))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <JointLimit>) istream)
  "Deserializes a message object of type '<JointLimit>"
    (cl:setf (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'joint_cnt)) (cl:read-byte istream))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'joint_max_pos_limit_normal_mode) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'joint_max_pos_limit_normal_mode)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'joint_min_pos_limit_normal_mode) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'joint_min_pos_limit_normal_mode)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'joint_max_pos_limit_reduced_mode) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'joint_max_pos_limit_reduced_mode)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'joint_min_pos_limit_reduced_mode) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'joint_min_pos_limit_reduced_mode)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'joint_vel_limit_reduced_mode) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'joint_vel_limit_reduced_mode)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'joint_vel_limit_normal_mode) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'joint_vel_limit_normal_mode)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<JointLimit>)))
  "Returns string type for a message object of type '<JointLimit>"
  "svaya_control/JointLimit")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'JointLimit)))
  "Returns string type for a message object of type 'JointLimit"
  "svaya_control/JointLimit")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<JointLimit>)))
  "Returns md5sum for a message object of type '<JointLimit>"
  "5401a4925cdae95fe53c373fe45e169d")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'JointLimit)))
  "Returns md5sum for a message object of type 'JointLimit"
  "5401a4925cdae95fe53c373fe45e169d")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<JointLimit>)))
  "Returns full string definition for message of type '<JointLimit>"
  (cl:format cl:nil "uint8 joint_cnt~%float64[] joint_max_pos_limit_normal_mode~%float64[] joint_min_pos_limit_normal_mode~%float64[] joint_max_pos_limit_reduced_mode~%float64[] joint_min_pos_limit_reduced_mode~%float64[] joint_vel_limit_reduced_mode~%float64[] joint_vel_limit_normal_mode~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'JointLimit)))
  "Returns full string definition for message of type 'JointLimit"
  (cl:format cl:nil "uint8 joint_cnt~%float64[] joint_max_pos_limit_normal_mode~%float64[] joint_min_pos_limit_normal_mode~%float64[] joint_max_pos_limit_reduced_mode~%float64[] joint_min_pos_limit_reduced_mode~%float64[] joint_vel_limit_reduced_mode~%float64[] joint_vel_limit_normal_mode~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <JointLimit>))
  (cl:+ 0
     1
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'joint_max_pos_limit_normal_mode) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'joint_min_pos_limit_normal_mode) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'joint_max_pos_limit_reduced_mode) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'joint_min_pos_limit_reduced_mode) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'joint_vel_limit_reduced_mode) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'joint_vel_limit_normal_mode) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <JointLimit>))
  "Converts a ROS message object to a list"
  (cl:list 'JointLimit
    (cl:cons ':joint_cnt (joint_cnt msg))
    (cl:cons ':joint_max_pos_limit_normal_mode (joint_max_pos_limit_normal_mode msg))
    (cl:cons ':joint_min_pos_limit_normal_mode (joint_min_pos_limit_normal_mode msg))
    (cl:cons ':joint_max_pos_limit_reduced_mode (joint_max_pos_limit_reduced_mode msg))
    (cl:cons ':joint_min_pos_limit_reduced_mode (joint_min_pos_limit_reduced_mode msg))
    (cl:cons ':joint_vel_limit_reduced_mode (joint_vel_limit_reduced_mode msg))
    (cl:cons ':joint_vel_limit_normal_mode (joint_vel_limit_normal_mode msg))
))
